name: Release (PR)

on:
  workflow_dispatch:
  # Temporarily disabled to experiment with other options
  # push:
  #   branches:
  #     - develop

permissions:
  contents: write
  pull-requests: write

jobs:
  release-via-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Allow update-charts script to execute
        run: chmod +x ./update-charts.sh

      - name: Verify signatures
        run: npm audit signatures

      - name: Semantic Release
        id: semantic
        uses: codfish/semantic-release-action@v3
        with:
          branches: |
            ['develop']
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo ${{ steps.semantic.outputs.release-version }}
      - run: echo "$OUTPUTS"
        env:
          OUTPUTS: ${{ toJson(steps.semantic.outputs) }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Fix permissions
        run: sudo chown -R $(whoami) .git/objects

      - name: Commit changes
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          git checkout -b release/v${{ steps.semantic.outputs.release-version }}
          git add .
          git commit -am "chore(release): ${{ steps.semantic.outputs.release-version }}"
          git push https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} HEAD:release/v${{ steps.semantic.outputs.release-version }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a PR
        if: steps.semantic.outputs.new-release-published == 'true' && success()
        run: |
          gh pr create \
            --title "Release v${{ steps.semantic.outputs.release-version }}" \
            --body "${{ steps.semantic.outputs.release-notes }}" \
            --base develop \
            --head release/v${{ steps.semantic.outputs.release-version }} \
            --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
